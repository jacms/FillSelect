/**
 * SelectC8
 * @Copyright: Alan Mtz 
 * https://github.com/jacms
 * @version 1.0.0
 * @author jacms-c8
 * @license jacms
 */
!function(){function extendDefaults(source,properties){let property;for(property in properties)properties.hasOwnProperty(property)&&(source[property]=properties[property]);return source}function init(){this.settings.element&&0!==this.settings.element.length&&(this.settings.documentElement=getElement.call(this),bulidSelect.call(this))}function bulidSelect(){"SELECT"===this.settings.documentElement.tagName&&(clearElement(this.settings.documentElement),appendDefaultOption.call(this),appendOptions.call(this),selectedValue.call(this),setOnChange.call(this))}function setOnChange(){"function"==typeof this.settings.onChange&&this.settings.documentElement.addEventListener("change",this.settings.onChange)}function selectedValue(){this.settings.selectedValue&&(this.settings.documentElement.value=this.settings.selectedValue)}function getElement(){let element;return element="SELECT"===this.settings.element.tagName?this.settings.element:document.getElementById(this.settings.element),element}function appendDefaultOption(){if(!0===this.settings.appendDefaultFirstOption){let option=document.createElement("option");option.text=this.settings.defaultFirstOptionText,option.value=this.settings.defaultFirstOptionValue,this.settings.documentElement.add(option)}}function appendOptions(){if(!this.settings.list)return;let values;getPropertyValues.call(this).forEach(object=>{let option=document.createElement("option");option.text=object.text,option.value=object.value,this.settings.dataExtended&&void 0!==object[this.settings.dataExtended]&&option.setAttribute([this.settings.dataExtended],object[this.settings.dataExtended]),this.settings.documentElement.add(option)}),this.settings.onSuccess(this.settings.list)}function getPropertyValues(){let values=[];return this.settings.list.forEach(object=>{let optionValue;optionValue=!1===this.settings.assignWithoutProperties?{value:object[this.settings.valueProperty],text:object[this.settings.textProperty]}:{value:object,text:object},this.settings.dataExtended&&void 0!==object[this.settings.dataExtended]&&(optionValue[this.settings.dataExtended]=object[this.settings.dataExtended]),values.push(optionValue)}),values}function clearElement(element){for(let i=0;i<element.options.length;i++)element.options[i]=null}this.SelectC8=function(){var defaults={element:null,list:[],valueProperty:"id",textProperty:"name",dataExtended:null,selectedValue:null,assignWithoutProperties:!1,appendDefaultFirstOption:!0,defaultFirstOptionValue:"",defaultFirstOptionText:"-- Select option --",onChange:null,onSuccess:function(){return!1}};arguments[0]&&"object"==typeof arguments[0]&&(this.settings=extendDefaults(defaults,arguments[0]))},SelectC8.prototype.fill=function(){arguments[0]&&"object"==typeof arguments[0]&&(this.settings=extendDefaults(this.settings,arguments[0])),init.call(this)},SelectC8.prototype.destroy=function(){console.log("destroy")},SelectC8.prototype.getValue=function(){console.log("getValue")},SelectC8.prototype.setValue=function(){console.log("setValue")}}();